#include <stdio.h>
#include<time.h>
#include <string.h>



typedef struct{
   char name[50], email[50], phoneNum[50];
}info;


void date_time(){
   time_t rawtime;
   struct tm * timeinfo;

   time ( &rawtime );
   timeinfo = localtime ( &rawtime );
   printf ( "\t\t\t\n%s", asctime (timeinfo) );
}

//////////// start of passWord method ///////////////
int passWord()
{char passWord[10]= "ProjectC";
   char Enterd[10] ;
   printf("Enter Password:\n");
   int i=1;
   while(i){
      
      scanf("%s" , &Enterd);
      if(strcmp(Enterd , passWord)!=0){
         i=1;
         printf("**WRONG PASSWORD, Try Again.**\n");}
      else if(strcmp(Enterd , passWord)==0)
         return 1;
   }} //end of password
   
   
//////////// start of add method ///////////////
void add(){
   printf("How many records you want to add? \n");
   int e;
   int i=0;
   scanf("%d", &e);
    
   FILE *f;
   f= fopen("records.txt" , "a+");
   if(f==NULL){
      printf("File not opened");
      return;
   }
   info p;
   for(i=0; i< e ; i++){
      printf("Record No.%d\n" , i+1);
      printf("Enter Name: ");
      scanf("%s",p.name);
      printf("Enter e-mail: ");
      scanf("%s",p.email);
      printf("Enter phone Number: ");
      scanf("%s",p.phoneNum);
      fprintf(f, "%s\t%s\t%s\n",p.name,p.email,p.phoneNum);
      printf("**A Record Added Successfully.**\n\n");
   }fclose(f);
}//end of add

//////////// start of viewAll method ///////////////
void viewAll(){
   FILE *R; 
   info p;
   int i=0;
    // open file for writing 
   R = fopen ("records.txt", "r");
   if(R==NULL){
      printf("can't open file");
      return; }
   
   rewind(R);
   for(;;){
      fscanf(R,"%s %s %s",p.name , p.email , p.phoneNum );
      if (feof(R)) 
         break;
      printf("%s \t\t|  %s \t\t|  %s\n\n", p.name , p.email, p.phoneNum);}
   fclose (R); 
}//end of viwAll

//////////// start of search method ///////////////         
void search(){
   info p;
   int count=0,i=1;
   char search[50];
   FILE *f;
   f= fopen("records.txt", "r");

   while(i){
      printf("Enter Name to search: \n");
      scanf("%s",&search);
      getchar();
   
      char Line[150];
      char Lines[200];
      count=0;
      
      rewind(f);
      for(;;){
         fscanf(f,"%s %s %s",p.name , p.email , p.phoneNum );
         if (feof(f)) 
            break;
         if(strcmp(p.name , search)==0){
            count++;
            printf("\nRECORD FOUND No.%d: \n", count);
            printf("%s \t\t|  %s \t\t|  %s\n\n", p.name , p.email, p.phoneNum);    }
         
         else if(strcmp(p.name , search)!=0){
            i++;
         }  }
    
      if(count>0){
         printf("Matching records: %d\n",count);
      }
      else if(i>0)
         printf("**RECORD NOT FOUND**\n");
      printf("To continue press 1 or 0 to exit:  ");
      scanf("%d", &i);
      rewind(f);
   
   } 
   fclose(f);
   return; }//end search method
  
  
//////////// start of Edit method /////////////// 
void edit(){
   info p , s;
   FILE *fp;
   int i=0;
   fp=fopen(  "records.txt", "r" );//Opens an existing text file for reading purpose.
        
   FILE *f;        
   f= fopen("Temp.txt","w");//opens a text file for writing. If it does not exist, then a new file is created.
   if(f==NULL || fp==NULL){
      printf("File not opened");
      return; }
      
   printf("Enter Name for Editing: ");
   char Rename[150];
   scanf("%s", &Rename);

   int countint=0;

   while(!feof(fp)){    
      fscanf(fp,"%s %s %s",p.name , p.email , p.phoneNum );
      countint++;
   }
  
   int w = 0;
   rewind(fp);
   while(!feof(fp)){
      if(w==countint-1)
         break;
      fscanf(fp,"%s %s %s",p.name , p.email , p.phoneNum );
      if(strcmp(p.name , Rename)==0 && i<1){
         
         printf("New e-mail:\n");
         scanf("%s",p.email);
         printf("New phone Number:\n");
         scanf("%s",p.phoneNum);
         fprintf(f, "%s\t%s\t%s\n",p.name,p.email,p.phoneNum);
         i++;
      }
      else {
         fprintf(f, "%s\t%s\t%s\n",p.name,p.email,p.phoneNum);
      }
      w++; }
   fclose(f);
   fclose(fp);
   
   remove("records.txt");
   rename("Temp.txt","records.txt");
}//end of edit
  
  
//////////// start of delete  method ///////////////
void deleteR(){
   info p;   

   char linee[150];
   FILE *fp;
   fp=fopen("records.txt", "r" );//Opens an existing text file for reading purpose.
      
   FILE *f;        
   f= fopen("f.txt","w");//opens a text file for writing. If it does not exist, then a new file is created.

   if(f==NULL || fp==NULL){
      printf("File not opened");
      return;  }


   
   printf("------Enter Name for record to delete------ \n");
   char Rename[150];
   scanf("%s", Rename);
   rewind(fp);
  
   char Liness[150];
    
   int count=0 ; 
   for(;;){ 
      fscanf(fp,"%s %s %s",p.name , p.email , p.phoneNum );
      if(feof(fp)) 
         break;
      
      if(strcmp(p.name,Rename)!=0)
         fprintf(f, "%s\t%s\t%s\n",p.name,p.email,p.phoneNum);
      else 
         count++;
   }  
   
   if(count==0)
      printf("**RECORD NOT FOUND**\n\n", count);
   else
      printf("**%d Record Deleted Successfully**\n\n", count);
   
   
   fclose(f);
   fclose(fp);
      
   remove("records.txt");
   rename("f.txt","records.txt");
}//end of delete

 
void main(){
   int choice;

   date_time();
   int pass = passWord();
   
A:
   if(pass){
      printf("\nType the option you want:\n--------------\n1-Add new content. \t\t\t\t2-Delete content.\n3-Edit content.\t\t\t\t\t4-View all added contents.\n5-Search contents.\t\t\t\t6-Exit the program.\n");
      printf("Your choise: ");
      scanf("%d", &choice);
      printf("\n");
   
   
      switch(choice){
         case 1:
            add();
         
            break;
         case 2:
            deleteR();
            break;
         case 3:
            edit();
            break;
         case 4:
            viewAll();
            break;
         case 5:
            search();
            break;
         case 6:
         
            return;
            break;
         default: 
            printf("No such choice.");
      
      }//End of switch;
      goto A;
   }

      


}

